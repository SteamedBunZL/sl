<?xml version="1.0" encoding="utf-8"?>
<project
    name="shenliao"
    default="release" >

    <!--
    ANT环境变量 
	<property environment="env" />
    -->

    <property
        name="java_home"
        value="D:/Program Files/Java/jdk1.6.0_45" />
    <!-- 应用名称 -->

    <property
        name="appName"
        value="${ant.project.name}" />
    <!-- SDK目录(获取操作系统环境变量ANDROID_SDK_HOME的值) -->

    <property
        name="sdk-folder"
        value="E:/adt-bundle-windows-x86-20130522/sdk" />
    <!-- SDK指定平台目录 -->

    <property
        name="sdk-platform-folder"
        value="${sdk-folder}/platforms/android-17" />
    <!-- SDK中tools目录 -->

    <property
        name="sdk-tools"
        value="${sdk-folder}/tools" />
    <!--
    SDK指定平台中tools目录 
	<property name="sdk-platform-tools" value="${sdk-platform-folder}/tools" />
    -->

    <property
        name="sdk-platform-tools"
        value="${sdk-folder}/build-tools/android-4.2.2/" />

    <!-- 使用到的命令(当前系统为windows,如果系统为linux,可将.bat文件替换成相对应的命令) -->

    <property
        name="aapt"
        value="${sdk-platform-tools}/aapt" />

    <property
        name="aidl"
        value="${sdk-platform-tools}/aidl" />

    <property
        name="dx"
        value="${sdk-platform-tools}/dx.bat" />

    <property
        name="apkbuilder"
        value="${sdk-tools}/apkbuilder.bat" />

    <property
        name="jarsigner"
        value="${java_home}/bin/jarsigner" />

    <!--
    编译需要的jar; 如果项目使用到地图服务则需要maps.jar 
	<property name="android-maps-jar" value="${sdk-folder}/add-ons/addon_google_apis_google_inc_8/libs/maps.jar" />
    -->

    <property
        name="android-jar"
        value="${sdk-platform-folder}/android.jar" />

    <!-- 编译aidl文件所需的预处理框架文件framework.aidl -->

    <property
        name="framework-aidl"
        value="${sdk-platform-folder}/framework.aidl" />

    <!-- 生成R文件的相对目录 -->

    <property
        name="outdir-gen"
        value="gen" />
    <!-- 编译后的文件放置目录 -->

    <property
        name="outdir-bin"
        value="bin" />

    <!-- 清单文件 -->

    <property
        name="manifest-xml"
        value="AndroidManifest.xml" />
    <!-- 源文件目录 -->

    <property
        name="resource-dir"
        value="res" />

    <property
        name="resource-ospath"
        value="${basedir}/${resource-dir}" />

    <property
        name="file.replace.path"
        value="com/tuixin11sms/tx/utils" />

    <property
        name="app.id"
        value="0" />

    <property
        name="version.name"
        value="0" />

    <property
        name="version.verNo"
        value="30802" />

    <property
        name="version.buildNo"
        value="1" />

    <property
        name="version.tuixinver"
        value="30802" />

    <property
        name="version.apptype"
        value="3.8.2" />

    <property
        name="fileName"
        value="Utils.java" />

    <property
        name="asset-dir"
        value="assets" />

    <property
        name="version.v"
        value="v" />
    <!-- java源文件目录 -->

    <property
        name="srcdir"
        value="src" />

    <property
        name="srcdir-ospath"
        value="${basedir}/${srcdir}" />
    <!-- 外部类库所在目录 -->

    <property
        name="external-lib"
        value="lib" />

    <property
        name="external-lib-ospath"
        value="${basedir}/${external-lib}" />

    <property
        name="external-libs"
        value="libs" />

    <property
        name="external-libs-ospath"
        value="${basedir}/${external-libs}" />
    <!-- 生成class目录 -->

    <property
        name="outdir-classes"
        value="${outdir-bin}" />

    <property
        name="outdir-classes-ospath"
        value="${basedir}/${outdir-classes}" />
    <!-- 生成build目录 -->

    <property
        name="outdir-build"
        value="build" />
    <!-- classes.dex相关变量 -->

    <property
        name="dex-file"
        value="classes.dex" />

    <property
        name="dex-path"
        value="${outdir-bin}/${dex-file}" />

    <property
        name="dex-ospath"
        value="${basedir}/${dex-path}" />

    <!-- 经过aapt生成的资源包文件 -->

    <property
        name="resources-package"
        value="${outdir-bin}/resources.ap_" />

    <property
        name="resources-package-ospath"
        value="${basedir}/${resources-package}" />

    <!-- 未认证apk包 -->

    <property
        name="out-unsigned-package"
        value="${outdir-bin}/${appName}-unsigned.apk" />

    <property
        name="out-unsigned-package-ospath"
        value="${basedir}/${out-unsigned-package}" />

    <!-- 证书文件 -->

    <property
        name="keystore-file"
        value="${basedir}/android.keystore" />

    <!-- 已认证apk包 -->

    <property
        name="out-signed-package"
        value="${outdir-build}/${appName}_${version.v}${version.name}_${app.id}_${version.buildNo}.apk" />

    <property
        name="out-signed-package-ospath"
        value="${basedir}/${out-signed-package}" />

    <target name="CopyReplaceCid" >

        <delete file=".\assets\cid.json" />

        <copy
            file=".\appstore\cid_${app.id}.json"
            tofile=".\assets\cid.json" />

        <replace
            file=".\assets\cid.json"
            token="CurBuildNo"
            value="${version.buildNo}" />

        <replace
            file=".\assets\cid.json"
            token="CurVersion"
            value="${version.verNo}" />

        <replace
            file=".\assets\cid.json"
            token="CurTuixinVer"
            value="${version.tuixinver}" />

        <replace
            file=".\assets\cid.json"
            token="CurAppType"
            value="${version.apptype}" />
    </target>

    <!-- 将替换cid.json -->

    <target
        name="package-res-and-assets"
        depends="CopyReplaceCid" >

        <echo>
Removing cid.json to ${out-unsigned-package}...
        </echo>

        <exec executable="${aapt}" >

            <arg value="remove" />

            <arg value="${out-unsigned-package}" />

            <arg value="assets/cid.json" />
        </exec>

        <echo>
Adding cid.json to ${out-unsigned-package}...
        </echo>

        <exec
            executable="${aapt}"
            failonerror="true" >

            <arg value="add" />

            <arg value="${out-unsigned-package}" />

            <arg value="assets/cid.json" />
        </exec>
    </target>

  

    <!-- 对apk进行签证 -->

    <target
        name="jarsigner"
        depends="package-res-and-assets" >

        <echo>
Packaging signed apk for release...
        </echo>

        <exec
            executable="${jarsigner}"
            failonerror="true" >

            <arg value="-keystore" />

            <arg value="${keystore-file}" />

            <arg value="-storepass" />

            <arg value="tuixin" />

            <arg value="-keypass" />

            <arg value="tuixin" />

            <arg value="-signedjar" />

            <arg value="${out-signed-package-ospath}" />

            <arg value="${out-unsigned-package-ospath}" />
            <!-- 不要忘了证书的别名 -->

            <arg value="推信" />
        </exec>
    </target>
    <!-- 发布 -->

    <target
        name="release"
        depends="jarsigner" >

        <!-- 删除未签证apk -->

        <echo>
APK is released. path:${out-signed-package-ospath}
        </echo>
    </target>

</project>